{"version":3,"sources":["../../../../../assets/scripts/map/assets/scripts/map/MapCtrl.js"],"names":["MAP_MIN_SCALE","MAP_MAX_SCALE","cc","Class","extends","Component","properties","map","TiledMap","mapScrollView","ScrollView","testNode","Node","prepare","_moving","initMap","start","node","on","EventType","TOUCH_START","onTouchStart","TOUCH_MOVE","onTouchMove","TOUCH_END","onTouchEnd","TOUCH_CANCEL","onTouchCancle","cfg","event","touches","getTouches","length","log","touch1","touch2","delta1","getDelta","delta2","touchPoint1","parent","convertToNodeSpaceAR","getLocation","touchPoint2","anchorBefore","getAnchorPoint","disLeft","width","x","scale","disBottom","height","y","anchorAfter","v2","setAnchorPoint","disX","disY","setPosition","JSON","stringify","distance","sub","delta","Math","abs","minScale","visibleRect","max","tscale","anchorX","anchorY","goBoundary","mapScale","posXLeft","posx","posXRight","posYTop","posy","poxYBottom","scrollToBuildingPos","pos","t","mapOriPos","getPosition","mapNewPos","posDiff","subSelf","len","mag","scrollToOffset","onMapScrolling","scrollView"],"mappings":";;;;;;AAAA;;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,IAAMA,gBAAgB,IAAtB;AACA,IAAMC,gBAAgB,CAAtB;;AAEAC,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,aAAKL,GAAGM,QADA;AAERC,uBAAeP,GAAGQ,UAFV;AAGRC,kBAAUT,GAAGU;AAHL,KAHP;;AASL;;AAEA;;AAEAC,WAbK,qBAaM;AACP,aAAKC,OAAL,GAAe,KAAf;AACA,aAAKC,OAAL;AACH,KAhBI;AAkBLC,SAlBK,mBAkBI;AACL,aAAKH,OAAL;;AAEA,aAAKI,IAAL,CAAUC,EAAV,CAAahB,GAAGU,IAAH,CAAQO,SAAR,CAAkBC,WAA/B,EAA4C,KAAKC,YAAjD,EAA+D,IAA/D,EAAqE,IAArE;AACA,aAAKJ,IAAL,CAAUC,EAAV,CAAahB,GAAGU,IAAH,CAAQO,SAAR,CAAkBG,UAA/B,EAA2C,KAAKC,WAAhD,EAA6D,IAA7D,EAAmE,IAAnE;AACA,aAAKN,IAAL,CAAUC,EAAV,CAAahB,GAAGU,IAAH,CAAQO,SAAR,CAAkBK,SAA/B,EAA0C,KAAKC,UAA/C,EAA2D,IAA3D,EAAiE,IAAjE;AACA,aAAKR,IAAL,CAAUC,EAAV,CAAahB,GAAGU,IAAH,CAAQO,SAAR,CAAkBO,YAA/B,EAA6C,KAAKC,aAAlD,EAAiE,IAAjE,EAAuE,IAAvE;AACH,KAzBI;AA2BLZ,WA3BK,qBA2Bc;AAAA,YAAVa,GAAU,uEAAJ,EAAI;AAElB,KA7BI;AA+BLP,gBA/BK,wBA+BSQ,KA/BT,EA+BgB;AACjB;AACA;;AAEA;AACA;AACA,aAAKf,OAAL,GAAe,KAAf;AACH,KAtCI;AAwCLS,eAxCK,uBAwCQM,KAxCR,EAwCe;AAChB,YAAIC,UAAUD,MAAME,UAAN,EAAd;AACA,YAAID,QAAQE,MAAR,IAAkB,CAAtB,EAAyB;AACrB9B,eAAG+B,GAAH,CAAO,SAAP;AACA,iBAAKnB,OAAL,GAAe,KAAf;AACA;AACA,gBAAIoB,SAASJ,QAAQ,CAAR,CAAb;AACA,gBAAIK,SAASL,QAAQ,CAAR,CAAb;AACA,gBAAIM,SAASF,OAAOG,QAAP,EAAb;AACA,gBAAIC,SAASH,OAAOE,QAAP,EAAb;AACA;AACA,gBAAIE,cAAc,KAAKtB,IAAL,CAAUuB,MAAV,CAAiBC,oBAAjB,CAAsCP,OAAOQ,WAAP,EAAtC,CAAlB;AACA,gBAAIC,cAAc,KAAK1B,IAAL,CAAUuB,MAAV,CAAiBC,oBAAjB,CAAsCN,OAAOO,WAAP,EAAtC,CAAlB;;AAEA;AACA,gBAAIE,eAAe,KAAKrC,GAAL,CAASU,IAAT,CAAc4B,cAAd,EAAnB;AACA;AACA,gBAAIC,UAAU,KAAKvC,GAAL,CAASU,IAAT,CAAc8B,KAAd,GAAsBH,aAAaI,CAAnC,GAAuC,KAAKzC,GAAL,CAASU,IAAT,CAAcgC,KAArD,GAA6D,KAAK1C,GAAL,CAASU,IAAT,CAAc+B,CAAzF;AACA,gBAAIE,YAAY,KAAK3C,GAAL,CAASU,IAAT,CAAckC,MAAd,GAAuBP,aAAaQ,CAApC,GAAwC,KAAK7C,GAAL,CAASU,IAAT,CAAcgC,KAAtD,GAA8D,KAAK1C,GAAL,CAASU,IAAT,CAAcmC,CAA5F;;AAEA;AACA,gBAAIC,cAAcnD,GAAGoD,EAAH,CAAMR,WAAW,KAAKvC,GAAL,CAASU,IAAT,CAAc8B,KAAd,GAAsB,KAAKxC,GAAL,CAASU,IAAT,CAAcgC,KAA/C,CAAN,EAA6DC,aAAa,KAAK3C,GAAL,CAASU,IAAT,CAAckC,MAAd,GAAuB,KAAK5C,GAAL,CAASU,IAAT,CAAcgC,KAAlD,CAA7D,CAAlB;AACA,iBAAK1C,GAAL,CAASU,IAAT,CAAcsC,cAAd,CAA6BF,WAA7B;AACA;AACA,gBAAIG,OAAO,KAAKjD,GAAL,CAASU,IAAT,CAAc8B,KAAd,IAAuBH,aAAaI,CAAb,GAAiBK,YAAYL,CAApD,IAAyD,KAAKzC,GAAL,CAASU,IAAT,CAAcgC,KAAlF;AACA,gBAAIQ,OAAO,KAAKlD,GAAL,CAASU,IAAT,CAAckC,MAAd,IAAwBP,aAAaQ,CAAb,GAAiBC,YAAYD,CAArD,IAA0D,KAAK7C,GAAL,CAASU,IAAT,CAAcgC,KAAnF;AACA;AACA,iBAAK1C,GAAL,CAASU,IAAT,CAAcyC,WAAd,CAA0BxD,GAAGoD,EAAH,CAAM,KAAK/C,GAAL,CAASU,IAAT,CAAc+B,CAAd,GAAkBQ,IAAxB,EAA8B,KAAKjD,GAAL,CAASU,IAAT,CAAcmC,CAAd,GAAkBK,IAAhD,CAA1B;;AAEAvD,eAAG+B,GAAH,CAAO,aAAP,EAAsB0B,KAAKC,SAAL,CAAeP,WAAf,CAAtB;;AAEA;AACA,gBAAIQ,WAAWtB,YAAYuB,GAAZ,CAAgBnB,WAAhB,CAAf;AACA,gBAAIoB,QAAQ3B,OAAO0B,GAAP,CAAWxB,MAAX,CAAZ;AACA,gBAAIW,QAAQ,CAAZ;AACA,gBAAIe,KAAKC,GAAL,CAASJ,SAASb,CAAlB,IAAuBgB,KAAKC,GAAL,CAASJ,SAAST,CAAlB,CAA3B,EAAiD;AAC7CH,wBAAQ,CAACY,SAASb,CAAT,GAAae,MAAMf,CAAN,GAAU,GAAxB,IAA+Ba,SAASb,CAAxC,GAA4C,KAAKzC,GAAL,CAASU,IAAT,CAAcgC,KAAlE;AACH,aAFD,MAEO;AACHA,wBAAQ,CAACY,SAAST,CAAT,GAAaW,MAAMX,CAAN,GAAU,GAAxB,IAA+BS,SAAST,CAAxC,GAA4C,KAAK7C,GAAL,CAASU,IAAT,CAAcgC,KAAlE;AACH;;AAED,gBAAIiB,WAAWhE,GAAGiE,WAAH,CAAehB,MAAf,GAAwB,KAAK5C,GAAL,CAASU,IAAT,CAAckC,MAArD;AACAe,uBAAWF,KAAKI,GAAL,CAASF,QAAT,EAAmBlE,aAAnB,CAAX;AACA,gBAAIiD,SAAShD,aAAb,EAA4B;AACxBgD,wBAAQhD,aAAR;AACH,aAFD,MAEO,IAAIgD,QAAQiB,QAAZ,EAAsB;AACzBG,yBAASH,QAAT;AACH;AACD,iBAAK3D,GAAL,CAASU,IAAT,CAAcgC,KAAd,GAAsBA,KAAtB;;AAEA/C,eAAG+B,GAAH,CAAO,eAAegB,KAAtB;AACH,SAjDD,MAiDO;AACH;AACI;AACA;AACA/C,mBAAG+B,GAAH,CAAO,MAAP;AACA,qBAAKnB,OAAL,GAAe,IAAf;AACA;AACA,oBAAIiD,SAAQlC,MAAMQ,QAAN,EAAZ;AACA,oBAAIY,SAAQ,KAAK1C,GAAL,CAASU,IAAT,CAAcgC,KAA1B;AACA,oBAAIqB,UAAU,KAAK/D,GAAL,CAASU,IAAT,CAAc4B,cAAd,GAA+BG,CAA7C;AACA,oBAAIuB,UAAU,KAAKhE,GAAL,CAASU,IAAT,CAAc4B,cAAd,GAA+BO,CAA7C;;AAEA,oBAAIlD,GAAGiE,WAAH,CAAepB,KAAf,GAAuB,CAAvB,IAA4B,KAAKxC,GAAL,CAASU,IAAT,CAAc8B,KAAd,GAAsBE,MAAtB,GAA8BqB,OAA9B,GAAwC,KAAK/D,GAAL,CAASU,IAAT,CAAc+B,CAAlF,KAAwF,CAAxF,IACA9C,GAAGiE,WAAH,CAAepB,KAAf,GAAuB,CAAvB,IAA4B,KAAKxC,GAAL,CAASU,IAAT,CAAc8B,KAAd,GAAsBE,MAAtB,IAA+B,IAAIqB,OAAnC,IAA8C,KAAK/D,GAAL,CAASU,IAAT,CAAc+B,CAA5D,IAAiE,CAA7F,CADJ,EACqG;AAC7F,yBAAKzC,GAAL,CAASU,IAAT,CAAc+B,CAAd,IAAmBe,OAAMf,CAAzB;AACP;AACD,oBAAI9C,GAAGiE,WAAH,CAAehB,MAAf,GAAwB,CAAxB,IAA6B,KAAK5C,GAAL,CAASU,IAAT,CAAckC,MAAd,GAAuBF,MAAvB,GAA+BsB,OAA/B,GAAyC,KAAKhE,GAAL,CAASU,IAAT,CAAcmC,CAApF,KAA0F,CAA1F,IACAlD,GAAGiE,WAAH,CAAehB,MAAf,GAAwB,CAAxB,IAA6B,KAAK5C,GAAL,CAASU,IAAT,CAAckC,MAAd,GAAuBF,MAAvB,IAAgC,IAAIsB,OAApC,IAA+C,KAAKhE,GAAL,CAASU,IAAT,CAAcmC,CAA7D,IAAkE,CAA/F,CADJ,EACuG;AACnG,yBAAK7C,GAAL,CAASU,IAAT,CAAcmC,CAAd,IAAmBW,OAAMX,CAAzB;AACH;AACJ;AACJ;;AAED;AACA,aAAKoB,UAAL;AACH,KApHI;AAsHL/C,cAtHK,sBAsHOI,KAtHP,EAsHc,CAElB,CAxHI;AA0HLF,iBA1HK,yBA0HUE,KA1HV,EA0HiB,CAErB,CA5HI;;;AA8HL;AACA2C,cA/HK,wBA+HQ;AACT,YAAIC,WAAW,KAAKlE,GAAL,CAASU,IAAT,CAAcgC,KAA7B;AACA,YAAII,cAAc,KAAK9C,GAAL,CAASU,IAAT,CAAc4B,cAAd,EAAlB;AACA;AACA,YAAI6B,WAAWxE,GAAGiE,WAAH,CAAepB,KAAf,GAAuB,CAAvB,IAA4B,KAAKxC,GAAL,CAASU,IAAT,CAAc8B,KAAd,GAAsBM,YAAYL,CAAlC,GAAsCyB,QAAtC,GAAiD,KAAKlE,GAAL,CAASU,IAAT,CAAc+B,CAA3F,CAAf;AACA,YAAG0B,WAAW,CAAd,EAAgB;AACZ,gBAAIC,OAAQ,KAAKpE,GAAL,CAASU,IAAT,CAAc8B,KAAd,GAAsBM,YAAYL,CAAlC,GAAsCyB,QAAvC,GAAmDvE,GAAGiE,WAAH,CAAepB,KAAf,GAAuB,CAArF;AACA,iBAAKxC,GAAL,CAASU,IAAT,CAAc+B,CAAd,GAAkB2B,IAAlB;AACH;;AAED;AACA,YAAIC,YAAY1E,GAAGiE,WAAH,CAAepB,KAAf,GAAuB,CAAvB,IAA4B,KAAKxC,GAAL,CAASU,IAAT,CAAc8B,KAAd,IAAuB,IAAIM,YAAYL,CAAvC,IAA4CyB,QAA5C,GAAuD,KAAKlE,GAAL,CAASU,IAAT,CAAc+B,CAAjG,CAAhB;AACA,YAAI4B,YAAY,CAAhB,EAAmB;AACf,gBAAID,QAAOzE,GAAGiE,WAAH,CAAepB,KAAf,GAAuB,CAAvB,GAA4B,KAAKxC,GAAL,CAASU,IAAT,CAAc8B,KAAd,IAAuB,IAAIM,YAAYL,CAAvC,IAA4CyB,QAAnF;AACA,iBAAKlE,GAAL,CAASU,IAAT,CAAc+B,CAAd,GAAkB2B,KAAlB;AACH;;AAED;AACA,YAAIE,UAAU3E,GAAGiE,WAAH,CAAehB,MAAf,GAAwB,CAAxB,IAA6B,KAAK5C,GAAL,CAASU,IAAT,CAAckC,MAAd,IAAwB,IAAIE,YAAYD,CAAxC,IAA6CqB,QAA7C,GAAwD,KAAKlE,GAAL,CAASU,IAAT,CAAcmC,CAAnG,CAAd;AACA,YAAIyB,UAAU,CAAd,EAAiB;AACb;AACA,gBAAIC,OAAO5E,GAAGiE,WAAH,CAAehB,MAAf,GAAwB,CAAxB,GAA6B,KAAK5C,GAAL,CAASU,IAAT,CAAckC,MAAd,IAAwB,IAAIE,YAAYD,CAAxC,IAA6CqB,QAA1E,GAAsF,EAAjG;AACA,iBAAKlE,GAAL,CAASU,IAAT,CAAcmC,CAAd,GAAkB0B,IAAlB;AACH;;AAED;AACA,YAAIC,aAAa7E,GAAGiE,WAAH,CAAehB,MAAf,GAAwB,CAAxB,IAA6B,KAAK5C,GAAL,CAASU,IAAT,CAAckC,MAAd,GAAuBE,YAAYD,CAAnC,GAAuCqB,QAAvC,GAAkD,KAAKlE,GAAL,CAASU,IAAT,CAAcmC,CAA7F,CAAjB;AACA,YAAI2B,aAAa,CAAjB,EAAoB;AAChB,gBAAID,QAAQ,KAAKvE,GAAL,CAASU,IAAT,CAAckC,MAAd,GAAuBE,YAAYD,CAAnC,GAAuCqB,QAAxC,GAAoDvE,GAAGiE,WAAH,CAAehB,MAAf,GAAwB,CAAvF;AACA,iBAAK5C,GAAL,CAASU,IAAT,CAAcmC,CAAd,GAAkB0B,KAAlB;AACH;AAEJ,KA/JI;;;AAiKL;;;;AAIAE,uBArKK,iCAqKmC;AAAA,YAAnBC,GAAmB,uEAAb/E,GAAGoD,EAAH,CAAM,CAAN,EAAS,CAAT,CAAa;;AACpC,YAAI4B,IAAI,CAAR;AACA,YAAIjC,QAAQ,KAAK1C,GAAL,CAASU,IAAT,CAAcgC,KAA1B;AACA,YAAIkC,YAAY,KAAK5E,GAAL,CAASU,IAAT,CAAcmE,WAAd,EAAhB;AACA,YAAIC,YAAYnF,GAAGoD,EAAH,CAAM6B,UAAUnC,CAAV,GAAciC,IAAIjC,CAAJ,GAAQC,KAA5B,EAAmCkC,UAAU/B,CAAV,GAAc6B,IAAI7B,CAAJ,GAAQH,KAAzD,CAAhB,CAJoC,CAI6C;AACjF,YAAIqC,UAAUH,UAAUI,OAAV,CAAkBF,SAAlB,CAAd;AACA,YAAIG,MAAMF,QAAQG,GAAR,EAAV;AACAP,YAAIM,MAAMtF,GAAGiE,WAAH,CAAepB,KAArB,GAA8B,GAAlC;AACA7C,WAAG+B,GAAH,CAAO,gBAAP,EAAyB0B,KAAKC,SAAL,CAAeqB,GAAf,CAAzB,EAA8C,MAA9C,EAAsDC,CAAtD;;AAEA,aAAKzE,aAAL,CAAmBiF,cAAnB,CAAkCxF,GAAGoD,EAAH,CAAM,KAAK/C,GAAL,CAASU,IAAT,CAAc8B,KAAd,GAAoB,CAApB,GAAsBE,KAAtB,GAA8B/C,GAAGiE,WAAH,CAAepB,KAAf,GAAqB,CAAnD,GAAuDuC,QAAQtC,CAArE,EAAwE,KAAKzC,GAAL,CAASU,IAAT,CAAckC,MAAd,GAAqB,CAArB,GAAuBF,KAAvB,GAA+B/C,GAAGiE,WAAH,CAAehB,MAAf,GAAsB,CAArD,GAAyDmC,QAAQlC,CAAzI,CAAlC,EAA+K8B,CAA/K,EAAkL,KAAlL;AACH,KAhLI;AAkLLS,kBAlLK,0BAkLWC,UAlLX,EAkLuB,CAG3B;AAFG;AACA;;;AAGJ;;AAvLK,CAAT","file":"MapCtrl.js","sourceRoot":"../../../../../assets/scripts/map","sourcesContent":["import { runInThisContext } from \"vm\";\nimport { timingSafeEqual } from \"crypto\";\n\n// Learn cc.Class:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/class.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/class.html\n// Learn Attribute:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/reference/attributes.html\n//  - [English] http://docs.cocos2d-x.org/creator/manual/en/scripting/reference/attributes.html\n// Learn life-cycle callbacks:\n//  - [Chinese] https://docs.cocos.com/creator/manual/zh/scripting/life-cycle-callbacks.html\n//  - [English] https://www.cocos2d-x.org/docs/creator/manual/en/scripting/life-cycle-callbacks.html\n\nconst MAP_MIN_SCALE = 0.26;\nconst MAP_MAX_SCALE = 1;\n\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        map: cc.TiledMap,\n        mapScrollView: cc.ScrollView,\n        testNode: cc.Node,\n    },\n\n    // LIFE-CYCLE CALLBACKS:\n\n    // onLoad () {},\n\n    prepare () {\n        this._moving = false;\n        this.initMap();\n    },\n\n    start () {\n        this.prepare();\n\n        this.node.on(cc.Node.EventType.TOUCH_START, this.onTouchStart, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_MOVE, this.onTouchMove, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_END, this.onTouchEnd, this, true);\n        this.node.on(cc.Node.EventType.TOUCH_CANCEL, this.onTouchCancle, this, true);\n    },\n\n    initMap (cfg = {}) {\n\n    },\n\n    onTouchStart (event) {        \n        // let pos = event.getLocation();\n        // cc.log(\"touch start: \", JSON.stringify(pos));\n\n        // pos = this.node.parent.convertToNodeSpaceAR(pos);\n        // cc.log(\"map pos:\", JSON.stringify(pos));\n        this._moving = false;\n    },\n\n    onTouchMove (event) {\n        let touches = event.getTouches();\n        if (touches.length >= 2) {\n            cc.log(\"地图缩放。。。\");\n            this._moving = false;\n            // 缩放\n            let touch1 = touches[0];\n            let touch2 = touches[1];\n            let delta1 = touch1.getDelta();\n            let delta2 = touch2.getDelta();\n            // 坐标转换为map坐标系\n            let touchPoint1 = this.node.parent.convertToNodeSpaceAR(touch1.getLocation());\n            let touchPoint2 = this.node.parent.convertToNodeSpaceAR(touch2.getLocation());\n            \n            // 记录当前锚点\n            let anchorBefore = this.map.node.getAnchorPoint();\n            // 新锚点在map左、下边界距离(始终以当前视野中心为锚点)\n            let disLeft = this.map.node.width * anchorBefore.x * this.map.node.scale - this.map.node.x; \n            let disBottom = this.map.node.height * anchorBefore.y * this.map.node.scale - this.map.node.y;\n\n            // 新的锚点 \n            let anchorAfter = cc.v2(disLeft / (this.map.node.width * this.map.node.scale), disBottom / (this.map.node.height * this.map.node.scale));\n            this.map.node.setAnchorPoint(anchorAfter);\n            // 新旧锚点距离差\n            let disX = this.map.node.width * (anchorBefore.x - anchorAfter.x) * this.map.node.scale;\n            let disY = this.map.node.height * (anchorBefore.y - anchorAfter.y) * this.map.node.scale;\n            // 位置纠正\n            this.map.node.setPosition(cc.v2(this.map.node.x - disX, this.map.node.y - disY));\n\n            cc.log(\"new anchor:\", JSON.stringify(anchorAfter));\n            \n            // 缩放， 手指移动距离的0.5倍\n            let distance = touchPoint1.sub(touchPoint2);\n            let delta = delta1.sub(delta2);\n            let scale = 1;\n            if (Math.abs(distance.x) > Math.abs(distance.y)) {\n                scale = (distance.x + delta.x * 0.5) / distance.x * this.map.node.scale;\n            } else {\n                scale = (distance.y + delta.y * 0.5) / distance.y * this.map.node.scale;\n            }\n\n            let minScale = cc.visibleRect.height / this.map.node.height;\n            minScale = Math.max(minScale, MAP_MIN_SCALE);\n            if (scale >= MAP_MAX_SCALE) {\n                scale = MAP_MAX_SCALE;\n            } else if (scale < minScale) {\n                tscale = minScale;\n            } \n            this.map.node.scale = scale;\n\n            cc.log(\"map scale:\" + scale);\n        } else {\n            {\n                // mark: 地图移动改用scrollview，不再在这里处理\n                return;\n                cc.log(\"地图移动\");\n                this._moving = true;\n                // 移动\n                let delta = event.getDelta();\n                let scale = this.map.node.scale;\n                let anchorX = this.map.node.getAnchorPoint().x;\n                let anchorY = this.map.node.getAnchorPoint().y;\n    \n                if (cc.visibleRect.width / 2 - (this.map.node.width * scale * anchorX - this.map.node.x) <= 0 &&\n                    cc.visibleRect.width / 2 - (this.map.node.width * scale * (1 - anchorX) + this.map.node.x <= 0)) {\n                        this.map.node.x += delta.x;\n                }\n                if (cc.visibleRect.height / 2 - (this.map.node.height * scale * anchorY - this.map.node.y) <= 0 &&\n                    cc.visibleRect.height / 2 - (this.map.node.height * scale * (1 - anchorY) + this.map.node.y <= 0)) {\n                    this.map.node.y += delta.y;\n                }\n            }\n        }\n\n        // 防止出界， 动态补位\n        this.goBoundary(); \n    },\n\n    onTouchEnd (event) {\n\n    },\n\n    onTouchCancle (event) {\n\n    },\n\n    // 限定地图边界（缩放和移动过程中都需要检测)\n    goBoundary() {\n        let mapScale = this.map.node.scale;\n        let anchorAfter = this.map.node.getAnchorPoint();\n        // 左侧空白距离\n        let posXLeft = cc.visibleRect.width / 2 - (this.map.node.width * anchorAfter.x * mapScale - this.map.node.x);\n        if(posXLeft > 0){\n            let posx = (this.map.node.width * anchorAfter.x * mapScale) - cc.visibleRect.width / 2;\n            this.map.node.x = posx;\n        }\n\n        // 右侧空白距离\n        let posXRight = cc.visibleRect.width / 2 - (this.map.node.width * (1 - anchorAfter.x) * mapScale + this.map.node.x);\n        if (posXRight > 0) {\n            let posx = cc.visibleRect.width / 2 - (this.map.node.width * (1 - anchorAfter.x) * mapScale);\n            this.map.node.x = posx;\n        }\n\n        // 上测空白距离\n        let posYTop = cc.visibleRect.height / 2 - (this.map.node.height * (1 - anchorAfter.y) * mapScale + this.map.node.y);\n        if (posYTop > 0) {\n            // todo: 上测位置计算不对？（先减60）\n            let posy = cc.visibleRect.height / 2 - (this.map.node.height * (1 - anchorAfter.y) * mapScale) - 20;\n            this.map.node.y = posy;\n        }\n\n        // 下测空白距离\n        let poxYBottom = cc.visibleRect.height / 2 - (this.map.node.height * anchorAfter.y * mapScale - this.map.node.y);\n        if (poxYBottom > 0) {\n            let posy = (this.map.node.height * anchorAfter.y * mapScale) - cc.visibleRect.height / 2;\n            this.map.node.y = posy;\n        }\n\n    },\n\n    /**\n     * 地图移动到地图上某个建筑物到位置\n     * @param {cc.Vec2} pos 地图上某个建筑物的位置\n     */\n    scrollToBuildingPos (pos = cc.v2(0, 0)) {\n        let t = 1;\n        let scale = this.map.node.scale;\n        let mapOriPos = this.map.node.getPosition();\n        let mapNewPos = cc.v2(mapOriPos.x - pos.x * scale, mapOriPos.y - pos.y * scale); // 目标地图位置\n        let posDiff = mapOriPos.subSelf(mapNewPos);\n        let len = posDiff.mag();\n        t = len / cc.visibleRect.width  * 0.8;\n        cc.log(\"scroll to pos:\", JSON.stringify(pos), \", t=\", t);\n\n        this.mapScrollView.scrollToOffset(cc.v2(this.map.node.width/2*scale - cc.visibleRect.width/2 + posDiff.x, this.map.node.height/2*scale - cc.visibleRect.height/2 - posDiff.y), t, false);\n    },\n\n    onMapScrolling (scrollView) {\n        // cc.log(this.map.node.scale);\n        // cc.log(JSON.stringify(scrollView.getScrollOffset()));\n    }\n\n    // update (dt) {},\n});\n"]}