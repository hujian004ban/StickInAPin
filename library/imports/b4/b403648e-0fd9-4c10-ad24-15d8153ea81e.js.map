{"version":3,"sources":["../../../../../../assets/scripts/framework/common/assets/scripts/framework/common/CornerMng.js"],"names":["CornerType","cc","Enum","CORNER_ID_UPGRADE_OTHER","CORNER_ID_UPGRADE_TOWER","CORNER_ID_FREE_COINS","CornerConfig","UI_CONFIG","offset","v2","OPFlag","NORMAL","NEW","UPDATE","DELETE","CORNER_ZINDEX","Class","extends","Component","statics","prepare","cornerList","cornerUI","init","data","initData","updateCorner","registOn","node","cornerType","isValid","push","updateNode","registOff","addClientCorner","id","flag","deleteClientCorner","getCornerData","c","length","updateAllCorner","cornerTpe","nodeList","getPosition","cfg","anchor","getAnchorPoint","posX","width","x","posY","height","y","corner","checkCorner","cornerNode","getChildByName","uiCfg","srcUrl","src","srcScale","scale","zy","Node","createNode","zIndex","name","parent","addComponent","Sprite","url","cornerPos","position","active","_id","clean"],"mappings":"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","file":"CornerMng.js","sourceRoot":"../../../../../../assets/scripts/framework/common","sourcesContent":["/**\n * Created by skyxu on 2019/12/11.\n *\n * 红点系统\n */\n\nconst CornerType = cc.Enum({\n    // 服务器下发红点\n\n    // 客户端自定义红点\n    CORNER_ID_UPGRADE_OTHER: 1001,\n    CORNER_ID_UPGRADE_TOWER: 1010,\n    CORNER_ID_FREE_COINS: 1020,\n});\n\n/**\n * 自定义红点配置，一个id可以对应多个红点id\n * 比如id a对应b和c，只要满足b或者满足c则注册a的节点均显示红点\n * @type {{}}\n */\nconst CornerConfig = {\n    // [CornerType.CORNER_ID_FREE_COINS]: [CornerType.CORNER_ID_FREE_COINS, CornerType.CORNER_ID_UPGRADE_OTHER],\n};\n\n// 红点位置等配置信息\nconst UI_CONFIG = {\n    [CornerType.CORNER_ID_UPGRADE_OTHER]: {offset: cc.v2(-10,-10)},\n    [CornerType.CORNER_ID_UPGRADE_TOWER]: {offset: cc.v2(-10,-10)},\n    [CornerType.CORNER_ID_FREE_COINS]: {offset: cc.v2(-10,-10)},\n};\n\n// 服务器通用更新标识\nconst OPFlag = cc.Enum({\n    NORMAL: 0,  // 无\n    NEW: 1,  // 新的\n    UPDATE: 2,  // 更新\n    DELETE: 3,  // 删除\n});\n\nconst CORNER_ZINDEX = 9999;\n\ncc.Class({\n    extends: cc.Component,\n\n    statics: {\n        CornerType: CornerType,  // 注册红点类型\n        CornerConfig: CornerConfig,\n        UI_CONFIG: UI_CONFIG,\n\n        prepare() {\n            // 红点信息列表\n            this.cornerList = {};\n            // 激活节点列表\n            this.cornerUI = {};\n        },\n\n        init(data) {\n            this.prepare();\n            this.initData(data);\n        },\n\n        initData(data) {\n            this.updateCorner(data);\n        },\n\n        // 注册节点\n        registOn(node, cornerType) {\n            if (node && cc.isValid(node)) {\n                if (!this.cornerUI[cornerType]) {\n                    this.cornerUI[cornerType] = [];\n                }\n                this.cornerUI[cornerType].push(node);\n            }\n            this.updateNode(cornerType);\n        },\n\n        // 取消注册\n        registOff(cornerType) {\n            if (this.cornerUI[cornerType]) {\n                delete this.cornerUI[cornerType];\n            }\n        },\n\n        addClientCorner(id) {\n            this.updateCorner([{\n                id: id,\n                flag: OPFlag.NEW,\n            }]);\n        },\n\n        deleteClientCorner(id) {\n            this.updateCorner([{\n                id: id,\n                flag: OPFlag.DELETE,\n            }]);\n        },\n\n        getCornerData(id) {\n            return this.cornerList[id];\n        },\n\n        updateCorner(data) {\n            for (let c of data) {\n                let id = c.id || 0;\n                if (c.flag == OPFlag.DELETE) {\n                    delete this.cornerList[id];\n                } else {\n                    this.cornerList[id] = 1;\n                }\n            }\n\n            if (data && data.length > 0) {\n                this.updateAllCorner();\n            }\n        },\n\n        updateAllCorner() {\n            for (const cornerType in this.cornerUI) {\n                this.updateNode(cornerType);\n            }\n        },\n\n        updateNode(cornerTpe) {\n            let nodeList = this.cornerUI[cornerTpe];\n            if (!nodeList) {\n                return;\n            }\n\n            // 位置转换\n            let getPosition = (node, cfg) => {\n                let anchor = node.getAnchorPoint();\n                let posX = node.width * (1 - anchor.x);\n                let posY = node.height * (1 - anchor.y);\n                if (cfg) {\n                    posX += cfg.offset.x;\n                    posY += cfg.offset.y;\n                }\n\n                return cc.v2(posX, posY);\n            };\n\n            // 添加红点\n            let corner = this.checkCorner(cornerTpe);\n            for (let node of nodeList) {\n                if (node && cc.isValid(node)) {\n                    if (corner) {\n                        let cornerNode = node.getChildByName(\"CORNER_NODE_UI\"); // 红点node\n                        if (!cornerNode) {\n                            let uiCfg = UI_CONFIG[cornerTpe];\n                            let srcUrl = uiCfg && uiCfg.src || 'textures/common/red_dot';\n                            let srcScale = uiCfg && uiCfg.scale || 1;\n\n                            cornerNode = zy.Node.createNode({\n                                zIndex: CORNER_ZINDEX,\n                                name: \"CORNER_NODE_UI\",\n                                parent: node,\n                            });\n                            cornerNode.addComponent(zy.Sprite);\n                            zy.Sprite.updateNode(cornerNode, {\n                                url: srcUrl,\n                                scale: srcScale,\n                            });\n\n                            if (cc.isValid(cornerNode)) {\n                                let cornerPos = getPosition(node, uiCfg);\n                                cornerNode.position = cornerPos;\n                            }\n                        }\n\n                        if (cc.isValid(cornerNode)) {\n                            cornerNode.active = true;\n                        }\n                    } else {\n                        let cornerNode = node.getChildByName(\"CORNER_NODE_UI\"); // 红点node\n                        if (cornerNode && cc.isValid(cornerNode)) {\n                            cornerNode.active = false;\n                        }\n                    }\n                }\n            }\n        },\n\n        checkCorner(id) {\n            if (this.cornerList[id]) {\n                return true;\n            } else {\n                let cfg = CornerConfig[id] || [];\n                for (const _id of cfg) {\n                    if (this.cornerList[_id]) {\n                        return true;\n                    } else if (CornerConfig[_id] && this.checkCorner(_id)) {\n                        return true;\n                    }\n                }\n            }\n\n            return false;\n        },\n\n        clean() {\n            this.prepare();\n        }\n    }\n});"]}