{"version":3,"sources":["HttpProxy.js"],"names":["GameHttp","require","Md5","md5_hex_hmac","UtilsCross","UCRETRY","LOGINRETRY","port","Math","round","random","urlroot","encryptKey","HttpProxy","cc","Class","statics","instance","getInstance","login","onSuc","onFailed","log","data","energy","otherpassplies","loginday","diamond","allautoatt","normalpassplies","cversion","getAppVersion","healthlevel","zy","dataMng","userData","hpLevel","goldrewardlevel","freeCoinsLevel","stamina","phPower","channel","CHANNEL_ID","macaddress","device","mac","idfa","url","failCb","setTimeout","serverRequest","updateBase","id","value","baseinfoid","updateTurret","level","star","lock","turretid","updateBuilding","buildingid","updateTreasure","treasureid","watchAds","placeId","adstationid","clickButton","btnId","buttonid","getServerTime","JSON","stringify","encryptStr","uid","getMobilePhoneID","undefined","newData","parse","encrypt","roleid","token","httpPost","rep","getBody","isOk","getError"],"mappings":"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","file":"HttpProxy.js","sourceRoot":"../../../../../../assets/scripts/framework/net","sourcesContent":["/**\n * Created by skyxu on 2018/7/13.\n */\n\n\"use strict\";\n\nlet GameHttp = require(\"./GameHttp\");\nlet Md5 = require(\"./../encrypt/Md5\").md5_hex_hmac;\nlet UtilsCross = require(\"./../platform/PlatformUtils\");\n\nlet UCRETRY = 5;  // ucai统计最多重连5次\nlet LOGINRETRY = 5;  // 登陆重连次数\n\n// let urlroot = \"http://192.168.132.71:8080/zc_game?m=\"; // 内网\n// let urlroot = \"http://106.75.93.189:8080/zc_game?m=\"; // 外网\n\nlet port = [8010,8011,8012,8015,8016,8017][Math.round(Math.random() * 5)];\nlet urlroot = \"http://mini-game.zhanyougame.com:\" + port + \"/zc_game?m=\"; // 外网 8010,8011,8012,8015,8016,8017\n\nlet encryptKey = \"zygame\";\n\nlet HttpProxy = cc.Class({\n    statics: {\n        instance: null,\n        getInstance() {\n            if (!this.instance) {\n                this.instance = new HttpProxy();\n            }\n            return this.instance;\n        }\n    },\n\n    /**\n     * 登陆游戏\n     * @param onSuc\n     * @param onFailed\n     */\n    login(onSuc, onFailed){\n        cc.log(\"===urlroot:\" + urlroot);\n\n        let data = {\n            energy: 1,  // 次元能量\n            // focusingatt: GameManager.getCurrSkillTime(),  // 聚焦协同攻击时间\n            // vip: GameManager.getPlayerLevel(),  // vip等级\n            otherpassplies: 1,  // 次元关卡通关层数\n            // kaleidoscopeatt: GameManager.getCurrSkillTime(),  // 万花筒协同攻击时间\n            // salvoatt: GameManager.getCurrSkillTime(),  // 齐射协同攻击时间\n            loginday: 1,  // 登陆天数\n            diamond: 10,  // 钻石数量\n            // gold: GameManager.getPlayerGold(),  // 金币数量\n            allautoatt: 10, // 主炮塔自动攻击时间\n            normalpassplies: 1,  // 普通通关层数\n            cversion: UtilsCross.getAppVersion(),  // 客户端版本号\n            healthlevel: zy.dataMng.userData.hpLevel,\n            goldrewardlevel: zy.dataMng.userData.freeCoinsLevel,\n            // level: GameManager.getLevel(),\n            // experience: GameManager.getPlayer_UpgradeprogressNum(), // 升星经验值\n            stamina: zy.dataMng.userData.phPower, // 体力值\n            channel: CHANNEL_ID,\n            macaddress: zy.device.mac,\n            idfa: zy.device.idfa,\n\n\n        };\n        let url = urlroot + \"user_join_game\";\n        let failCb = ()=>{\n            if (onFailed) {\n                onFailed();\n            }\n            if (LOGINRETRY > 0) {\n                LOGINRETRY -= 1;\n                setTimeout(()=>{\n                    this.login();\n                }, 5000);\n            }\n        };\n\n        this.serverRequest(url, data, onSuc, failCb);\n    },\n\n    /**\n     * 更新玩家基础信息\n     * @param id{Number} 0金币,1钻石,2vip等级,3登录天数,4普通通关层数,5次元能量,6次元关\n     * @param value\n     * @param onSuc\n     * @param onFailed\n     */\n    updateBase(id, value, onSuc, onFailed) {\n        let data = {\n            baseinfoid: id,\n            value: value,\n        };\n\n        let url = urlroot + \"base_info_change\";\n        this.serverRequest(url, data, onSuc, onFailed);\n    },\n\n    /**\n     * 炮塔更新\n     * @param onSuc\n     * @param onFailed\n     *\n     * 炮塔id 0:加特林机枪,1:镭射炮,2:冰枪,3:火舌,4:电磁,5:榴弹炮\n     * lock 0:未解锁，1:解锁\n     */\n    updateTurret(id, level, star, lock, onSuc, onFailed){\n        let data = {\n            level: level,// 火力等级\n            turretid: id, // id\n            star: star, // 星\n            lock: lock, // 1\n        };\n\n        let url = urlroot + \"turret_info\";\n        this.serverRequest(url, data, onSuc, onFailed);\n    },\n\n    /**\n     * 建筑更新\n     * @param onSuc\n     * @param onFailed\n     *\n     * 科技建筑id 0:资源中心,1:科技研究院\n     * 是否解锁：0:未解锁，1:解锁\n     **/\n    updateBuilding(id, lock, onSuc, onFailed) {\n        let data = {\n            buildingid: id,\n            lock: lock,\n        };\n        let url = urlroot + \"building_info\";\n        this.serverRequest(url, data, onSuc, onFailed);\n    },\n\n    /**\n     * 宝物信息更新\n     * @param onSuc\n     * @param onFailed\n     */\n    updateTreasure(id, lock, onSuc, onFailed) {\n        let data = {\n            treasureid: id,\n            lock: lock,\n        };\n        let url = urlroot + \"treasure_info\";\n        this.serverRequest(url, data, onSuc, onFailed);\n    },\n\n    /**\n     * 观看广告\n     * @param placeId {string} 广告位\n     * @param onSuc\n     * @param onFailed\n     */\n    watchAds(placeId, onSuc, onFailed) {\n        let data = {\n            adstationid: placeId,\n        };\n        let url = urlroot + \"watch_advertisement\";\n        this.serverRequest(url, data, onSuc, onFailed);\n    },\n\n    /**\n     * 点击按钮\n     * @param btnId {string} 按钮名字（要唯一）\n     * @param onSuc\n     * @param onFailed\n     */\n    clickButton(btnId, onSuc, onFailed) {\n        let data = {\n            buttonid: btnId,\n        };\n        let url = urlroot + \"click_button\";\n        this.serverRequest(url, data, onSuc, onFailed);\n    },\n\n    getServerTime(onSuc, onFailed) {\n        let data = {\n        };\n        let url = urlroot + \"request_unixtime\";\n        this.serverRequest(url, data, onSuc, onFailed);\n    },\n\n    /**\n     *\n     * @param url\n     * @param data\n     * @param onSuc\n     * @param onFailed\n     */\n    serverRequest(url, data, onSuc, onFailed){\n        cc.log(\"===>serverRequest: \" + typeof data + \" | \" + JSON.stringify(data));\n        data = typeof data == \"string\" ? data : JSON.stringify(data);\n        // 加密校验传输\n        let encryptStr = Md5(encryptKey, data);\n        let uid = UtilsCross.getMobilePhoneID();\n        uid = uid == undefined ? \"\" : uid;\n        cc.log(\"uid=\" + uid);\n        let newData = {\n            data: JSON.parse(data),\n            encrypt: encryptStr,\n            roleid: uid,\n            token: \"\"\n        };\n\n        newData = JSON.stringify(newData);\n\n        GameHttp.httpPost(url, newData, (rep)=>{\n            cc.log(\"===>response:\" + rep.getBody());\n            if (rep.isOk()){\n                cc.log(\"===>requrest: \" + url + \" 成功。\");\n                if (onSuc){\n                    onSuc(JSON.parse(rep.getBody()));\n                }\n            } else {\n                cc.log(\"===>requrest: \" + url + \" 失败。\");\n                if (onFailed){\n                    onFailed(rep.getError() || rep.getBody());\n                }\n            }\n        });\n    }\n});\n"]}