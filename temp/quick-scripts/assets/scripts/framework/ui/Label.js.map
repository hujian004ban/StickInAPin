{"version":3,"sources":["Label.js"],"names":["i18n","require","Label","cc","Class","extends","statics","createNode","params","node","Node","addComponent","zy","updateNode","label","getComponent","font","constData","Font","FONT_NORMAL","loadCallback","systemFont","updateFunc","overflow","hasOwnProperty","string","verticalAlign","fontSize","outlineWidth","outlineColor","outline","LabelOutline","width","color","bind","loader","loadRes","err","_font","isValid","log","createAttrNode","attrs","attrNode","layout","Layout","type","Type","HORIZONTAL","resizeMode","ResizeMode","CONTAINER","subNodes","i","subNode","attr","anchor","v2","parent","__type","push","updateAttrNode","properties","textKey","override","default","multiline","tooltip","notify","localizedString","textValueOption","oldValue","get","_textKeyOption","JSON","parse","error","t","set","value","CC_EDITOR","warn","onLoad","module","exports"],"mappings":";;;;;;AAAA;;;;AAIA,IAAMA,OAAOC,QAAQ,MAAR,CAAb;;AAEA,IAAMC,QAAQC,GAAGC,KAAH,CAAS;AACnBC,aAASF,GAAGD,KADO;;AAGnBI,aAAS;AACL;AACAC,oBAAY,oBAAUC,MAAV,EAAkB;AAC1B,gBAAIC,OAAO,IAAIN,GAAGO,IAAP,EAAX;AACAD,iBAAKE,YAAL,CAAkBC,GAAGV,KAArB;AACAU,eAAGV,KAAH,CAASW,UAAT,CAAoBJ,IAApB,EAA0BD,MAA1B;AACA,mBAAOC,IAAP;AACH,SAPI;;AASLI,oBAAY,oBAAUJ,IAAV,EAAgBD,MAAhB,EAAwB;AAChC,gBAAIM,QAAQL,KAAKM,YAAL,CAAkBH,GAAGV,KAArB,CAAZ;AACA,gBAAI,CAACY,KAAL,EAAY;AACRA,wBAAQL,KAAKM,YAAL,CAAkBZ,GAAGD,KAArB,CAAR;AACH;AACD,gBAAIc,OAAOR,OAAOQ,IAAP,GAAcR,OAAOQ,IAArB,GAA4BJ,GAAGK,SAAH,CAAaC,IAAb,CAAkBC,WAAzD;AACA,gBAAIC,eAAeZ,OAAOY,YAA1B;AACA,gBAAIC,aAAab,OAAOa,UAAxB,CAPgC,CAOI;;AAEpC,gBAAIC,aAAa,YAAY;AACzB,oBAAId,OAAOe,QAAX,EAAqB;AACjBT,0BAAMS,QAAN,GAAiBf,OAAOe,QAAxB;AACH;;AAED,oBAAIf,OAAOgB,cAAP,CAAsB,QAAtB,CAAJ,EAAqC;AACjCV,0BAAMW,MAAN,GAAejB,OAAOiB,MAAtB;AACH;;AAED,oBAAIjB,OAAOgB,cAAP,CAAsB,eAAtB,CAAJ,EAA4C;AACxCV,0BAAMY,aAAN,GAAsBlB,OAAOkB,aAA7B;AACH;;AAED,oBAAIlB,OAAOmB,QAAX,EAAqB;AACjBb,0BAAMa,QAAN,GAAiBnB,OAAOmB,QAAxB;AACH;;AAED,oBAAInB,OAAOoB,YAAP,IAAuBpB,OAAOqB,YAAlC,EAAgD;AAC5C,wBAAIC,UAAUrB,KAAKM,YAAL,CAAkBZ,GAAG4B,YAArB,CAAd;AACA,wBAAI,CAACD,OAAL,EAAc;AACVA,kCAAUrB,KAAKE,YAAL,CAAkBR,GAAG4B,YAArB,CAAV;AACH;AACD,wBAAIvB,OAAOoB,YAAX,EAAyB;AACrBE,gCAAQE,KAAR,GAAgBxB,OAAOoB,YAAvB;AACH;AACD,wBAAIpB,OAAOqB,YAAX,EAAyB;AACrBC,gCAAQG,KAAR,GAAgBzB,OAAOqB,YAAvB;AACH;AACJ;AACJ,aA7BgB,CA6BfK,IA7Be,CA6BV,IA7BU,CAAjB;;AA+BA,gBAAI,CAACb,UAAL,EAAiB;AACblB,mBAAGgC,MAAH,CAAUC,OAAV,CAAkBpB,IAAlB,EAAwBb,GAAGe,IAA3B,EAAiC,IAAjC,EAAuC,UAAUmB,GAAV,EAAeC,KAAf,EAAsB;AACzD,wBAAI,CAACD,GAAL,EAAU;AACN,4BAAIlC,GAAGoC,OAAH,CAAW9B,IAAX,CAAJ,EAAsB;AAClB;AACAK,kCAAME,IAAN,GAAasB,KAAb;;AAEAhB;AACH;AACJ,qBAPD,MAOO;AACHnB,2BAAGqC,GAAH,CAAO,2BAAP,EAAoCH,GAApC;AACH;;AAED,wBAAIjB,YAAJ,EAAkB;AACdA,qCAAaiB,GAAb,EAAkB5B,IAAlB;AACH;AAEJ,iBAhBsC,CAgBrCyB,IAhBqC,CAgBhC,IAhBgC,CAAvC;AAiBH,aAlBD,MAkBO;AACHZ;;AAEA,oBAAIF,YAAJ,EAAkB;AACdA,iCAAa,IAAb,EAAmBX,IAAnB;AACH;AACJ;;AAEDG,eAAGF,IAAH,CAAQG,UAAR,CAAmBJ,IAAnB,EAAyBD,MAAzB;AACH,SA5EI;;AA+EL;AACAiC,wBAAgB,wBAAUC,KAAV,EAAiBlC,MAAjB,EAAyB;AACrC,gBAAImC,WAAW/B,GAAGF,IAAH,CAAQH,UAAR,CAAmBC,MAAnB,CAAf;;AAEA;AACA,gBAAIoC,SAASD,SAAShC,YAAT,CAAsBR,GAAG0C,MAAzB,CAAb;AACAD,mBAAOE,IAAP,GAAc3C,GAAG0C,MAAH,CAAUE,IAAV,CAAeC,UAA7B;AACAJ,mBAAOK,UAAP,GAAoB9C,GAAG0C,MAAH,CAAUK,UAAV,CAAqBC,SAAzC;;AAEA;AACA,gBAAIC,WAAW,EAAf;AACA,iBAAK,IAAMC,CAAX,IAAgBX,KAAhB,EAAuB;AACnB,oBAAIY,UAAU,IAAd;;AAEA,oBAAMC,OAAOb,MAAMW,CAAN,CAAb;AACAE,qBAAKC,MAAL,GAAcD,KAAKC,MAAL,GAAcD,KAAKC,MAAnB,GAA4BrD,GAAGsD,EAAH,CAAM,CAAN,EAAS,GAAT,CAA1C;AACA;AACAF,qBAAKG,MAAL,GAAcf,QAAd;;AAEA,oBAAIY,KAAKT,IAAL,IAAa,MAAjB,EAAyB;;AAErBQ,8BAAU1C,GAAGV,KAAH,CAASK,UAAT,CAAoBgD,IAApB,CAAV;;AAEA,wBAAIA,KAAKtB,KAAT,EAAgB;AACZqB,gCAAQrB,KAAR,GAAgBsB,KAAKtB,KAArB;AACH;AAEJ;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEAqB,wBAAQK,MAAR,GAAiBJ,KAAKT,IAAtB;;AAEAM,yBAASQ,IAAT,CAAcN,OAAd;AAEH;;AAEDX,qBAASS,QAAT,GAAoBA,QAApB;;AAEA,mBAAOT,QAAP;AACH,SArII;;AAuIL;AACAkB,wBAAgB,wBAAUpD,IAAV,EAAgBiC,KAAhB,EAAuBlC,MAAvB,EAA+B;AAC3C;AACA,gBAAI4C,WAAW3C,KAAK2C,QAApB;;AAEA,iBAAK,IAAMC,CAAX,IAAgBX,KAAhB,EAAuB;AACnB,oBAAMa,OAAOb,MAAMW,CAAN,CAAb;;AAEA,oBAAIC,UAAUF,SAASC,CAAT,CAAd;AACA,oBAAIM,SAASL,QAAQK,MAArB;;AAEA,oBAAIA,UAAU,MAAd,EAAsB;AAClB/C,uBAAGV,KAAH,CAASW,UAAT,CAAoByC,OAApB,EAA6BC,IAA7B;AACH;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH;AACJ;AAzKI,KAHU;;AA+KnBO,gBAAY;AACRC,iBAAS;AACLC,sBAAU,IADL;AAELC,qBAAS,EAFJ;AAGLC,uBAAW,IAHN;AAILC,qBAAS,qBAJJ;AAKLC,oBAAQ,kBAAY;AAChB,qBAAK3C,MAAL,GAAc,KAAK4C,eAAnB;AACH;AAPI,SADD;AAURC,yBAAiB;AACbN,sBAAU,IADG;AAEbC,qBAAS,EAFI;AAGbC,uBAAW,IAHE;AAIbC,qBAAS,4BAJI;AAKbC,oBAAQ,gBAAUG,QAAV,EAAoB;AACxB,qBAAK9C,MAAL,GAAc,KAAK4C,eAAnB;AACH;AAPY,SAVT;AAmBRA,yBAAiB;AACbL,sBAAU,IADG;AAEbG,qBAAS,6CAFI;AAGbK,iBAAK,eAAY;AACb,oBAAIC,uBAAJ;AACA,oBAAI,KAAKH,eAAL,IAAwB,KAAKA,eAAL,IAAwB,EAApD,EAAwD;AACpD,wBAAI;AACAG,yCAAiBC,KAAKC,KAAL,CAAW,KAAKL,eAAhB,CAAjB;AACH,qBAFD,CAEE,OAAOM,KAAP,EAAc;AACZ;AACH;AACJ;AACD,uBAAO5E,KAAK6E,CAAL,CAAO,KAAKd,OAAZ,EAAqBU,cAArB,CAAP;AACH,aAbY;AAcbK,iBAAK,aAAUC,KAAV,EAAiB;AAClB,qBAAKhB,OAAL,GAAegB,KAAf;AACA,oBAAIC,SAAJ,EAAe;AACX7E,uBAAG8E,IAAH,CAAQ,iDAAR;AACH;AACJ;AAnBY;AAnBT,KA/KO;;AAyNnBC,YAAQ,kBAAY;AAChB,YAAI,KAAKb,eAAT,EAA0B;AACtB,iBAAK5C,MAAL,GAAc,KAAK4C,eAAnB;AACH;AACJ;;AA7NkB,CAAT,CAAd;;AAiOAzD,GAAGV,KAAH,GAAWiF,OAAOC,OAAP,GAAiBlF,KAA5B","file":"Label.js","sourceRoot":"../../../../../../assets/scripts/framework/ui","sourcesContent":["/**\n * Created by skyxu on 2019/12/16.\n */\n\nconst i18n = require('i18n');\n\nconst Label = cc.Class({\n    extends: cc.Label,\n\n    statics: {\n        // 工厂方法\n        createNode: function (params) {\n            let node = new cc.Node();\n            node.addComponent(zy.Label);\n            zy.Label.updateNode(node, params);\n            return node;\n        },\n\n        updateNode: function (node, params) {\n            let label = node.getComponent(zy.Label);\n            if (!label) {\n                label = node.getComponent(cc.Label);\n            }\n            let font = params.font ? params.font : zy.constData.Font.FONT_NORMAL;\n            let loadCallback = params.loadCallback;\n            let systemFont = params.systemFont; // 系统字体 默认为FONT_NORMAL\n\n            let updateFunc = function () {\n                if (params.overflow) {\n                    label.overflow = params.overflow;\n                }\n\n                if (params.hasOwnProperty('string')) {\n                    label.string = params.string;\n                }\n\n                if (params.hasOwnProperty('verticalAlign')) {\n                    label.verticalAlign = params.verticalAlign;\n                }\n\n                if (params.fontSize) {\n                    label.fontSize = params.fontSize\n                }\n\n                if (params.outlineWidth || params.outlineColor) {\n                    let outline = node.getComponent(cc.LabelOutline);\n                    if (!outline) {\n                        outline = node.addComponent(cc.LabelOutline);\n                    }\n                    if (params.outlineWidth) {\n                        outline.width = params.outlineWidth;\n                    }\n                    if (params.outlineColor) {\n                        outline.color = params.outlineColor;\n                    }\n                }\n            }.bind(this);\n\n            if (!systemFont) {\n                cc.loader.loadRes(font, cc.Font, null, function (err, _font) {\n                    if (!err) {\n                        if (cc.isValid(node)) {\n                            // 字体\n                            label.font = _font;\n\n                            updateFunc();\n                        }\n                    } else {\n                        cc.log('zy.Label.updateLabel err:', err);\n                    }\n\n                    if (loadCallback) {\n                        loadCallback(err, node);\n                    }\n\n                }.bind(this));\n            } else {\n                updateFunc();\n\n                if (loadCallback) {\n                    loadCallback(null, node);\n                }\n            }\n\n            zy.Node.updateNode(node, params);\n        },\n\n\n        // 创建属性文本 label+img+label...\n        createAttrNode: function (attrs, params) {\n            let attrNode = zy.Node.createNode(params);\n\n            // 添加Layout\n            let layout = attrNode.addComponent(cc.Layout);\n            layout.type = cc.Layout.Type.HORIZONTAL;\n            layout.resizeMode = cc.Layout.ResizeMode.CONTAINER;\n\n            // 附加节点\n            let subNodes = [];\n            for (const i in attrs) {\n                let subNode = null;\n\n                const attr = attrs[i];\n                attr.anchor = attr.anchor ? attr.anchor : cc.v2(0, 0.5);\n                // attr.position = cc.v2(0, 0);\n                attr.parent = attrNode;\n\n                if (attr.type == 'text') {\n\n                    subNode = zy.Label.createNode(attr);\n\n                    if (attr.color) {\n                        subNode.color = attr.color;\n                    }\n\n                }\n                // else if (attr.type == 'img') {\n                //     if (attr.resType) {\n                //         attr.url = Data.getResItemUrl(attr.resType, attr.resId);\n                //     }\n                //\n                //     let scale = attr.scale;\n                //     delete attr.scale;\n                //\n                //     attr.loadCallback = function (err, node) {\n                //         node.width = node.width * scale;\n                //         node.height = node.height * scale;\n                //     }\n                //\n                //     subNode = zy.Sprite.createNode(attr);\n                //     subNode.__scale = scale;\n                // }\n\n                subNode.__type = attr.type;\n\n                subNodes.push(subNode);\n\n            }\n\n            attrNode.subNodes = subNodes;\n\n            return attrNode;\n        },\n\n        // 更新属性文本\n        updateAttrNode: function (node, attrs, params) {\n            // 附加节点\n            let subNodes = node.subNodes;\n\n            for (const i in attrs) {\n                const attr = attrs[i];\n\n                let subNode = subNodes[i];\n                let __type = subNode.__type;\n\n                if (__type == 'text') {\n                    zy.Label.updateNode(subNode, attr);\n                }\n                // else if (__type == 'img') {\n                //     if (attr.scale) {\n                //         subNode.__scale = attr.scale;\n                //         delete attr.scale;\n                //     }\n                //\n                //     if (attr.resType) {\n                //         attr.url = Data.getResItemUrl(attr.resType, attr.resId);\n                //     }\n                //\n                //     attr.loadCallback = function () {\n                //         if (subNode.__scale) {\n                //             subNode.width = subNode.width * subNode.__scale;\n                //             subNode.height = subNode.height * subNode.__scale;\n                //         }\n                //     }\n                //\n                //     zy.Sprite.updateNode(subNode, attr);\n                // }\n            }\n        },\n    },\n\n    properties: {\n        textKey: {\n            override: true,\n            default: '',\n            multiline: true,\n            tooltip: 'Enter i18n key here',\n            notify: function () {\n                this.string = this.localizedString;\n            }\n        },\n        textValueOption: {\n            override: true,\n            default: '',\n            multiline: true,\n            tooltip: 'Enter textValueOption here',\n            notify: function (oldValue) {\n                this.string = this.localizedString;\n            },\n        },\n        localizedString: {\n            override: true,\n            tooltip: 'Here shows the localized string of Text Key',\n            get: function () {\n                let _textKeyOption;\n                if (this.textValueOption && this.textValueOption != '') {\n                    try {\n                        _textKeyOption = JSON.parse(this.textValueOption);\n                    } catch (error) {\n                        // cc.log('Please set label text key in Text Value Option.');\n                    }\n                }\n                return i18n.t(this.textKey, _textKeyOption);\n            },\n            set: function (value) {\n                this.textKey = value;\n                if (CC_EDITOR) {\n                    cc.warn('Please set label text key in Text Key property.');\n                }\n            }\n        },\n    },\n\n    onLoad: function () {\n        if (this.localizedString) {\n            this.string = this.localizedString;\n        }\n    },\n\n});\n\nzy.Label = module.exports = Label;"]}