{"version":3,"sources":["Turning.js"],"names":["cc","Class","extends","Component","properties","turn","Sprite","prepare","turnStatus","curSpeed","spinTime","gearNum","gearAngle","defaultAngle","finalAngle","decAngle","springback","targetId","maxSpeed","duration","acc","init","loadRewardItem","startTurn","retId","caculateFinalAngle","forceStopTurn","node","rotation","log","showRes","update","dt","curRo","hadRo","act","rotateBy","seq","sequence","delayTime","callFunc","runAction"],"mappings":"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","file":"Turning.js","sourceRoot":"../../../../../../assets/scripts/framework/common","sourcesContent":["/**\n * Created by skyxu on 2019/12/27.\n *\n * 轮盘抽奖\n */\n\ncc.Class({\n    extends: cc.Component,\n    properties: {\n        turn: cc.Sprite,  // 旋转的盘子\n    },\n\n    prepare () {\n        this.turnStatus = 0;  // 0待操作，1正在加速旋转，2正在减速状态\n        this.curSpeed = 0;  // 当前转盘速度\n        this.spinTime = 0;  // 已经旋转的时间\n        this.gearNum = 8;  // 转盘齿轮数量\n        this.gearAngle = 360 / this.gearNum;\n        this.defaultAngle = 180;  // 指针指向id为1的格子的默认修正角度\n        this.finalAngle = 0;  // 最终需要旋转到的角度\n        this.decAngle = 1 * 360;  // 减速旋转圈数 360的整数倍\n        this.springback = false;  // 旋转结束是否反推一格\n        this.targetId = 6;  // 1 -- gearNum, 旋转结果id从1开始\n        this.maxSpeed = 10;  // 最大旋转速度6-15比较合适\n        this.duration = 2;  // 减速前旋转的时间\n        this.acc = 0.1;  // 加速度 0.01-0.2比较合适\n    },\n\n    init () {\n        this.prepare();\n    },\n\n    loadRewardItem () {\n        // 加载转盘上的奖励物品\n    },\n\n    /**\n     * 开始旋转转盘，并设置结果\n     * @param retId\n     */\n    startTurn(retId) {\n        if (this.turnStatus != 0) {\n            return;\n        }\n\n        this.caculateFinalAngle(retId);\n\n        this.turnStatus = 1;\n        this.curSpeed = 0;\n        this.spinTime = 0;\n    },\n\n    forceStopTurn() {\n        this.turnStatus = 0;\n        this.turn.node.rotation = this.finalAngle;\n    },\n\n    // 设置目标角度\n    caculateFinalAngle(targetId) {\n        if (targetId <= 0) {\n            // 随机一个\n            cc.log(\"targetId must be big than 0\");\n            targetId = 1;\n        }\n        this.targetId = targetId;\n        cc.log(\"====targetId:\" + this.targetId);\n        this.finalAngle = 360 - (this.targetId - 1) * this.gearAngle + this.defaultAngle;\n        if (this.springback) {\n            this.finalAngle += this.gearAngle;\n        }\n    },\n\n    showRes() {\n        // 如果因为某些处理这里转盘没有停止则强制停止转动\n        this.forceStopTurn();\n        cc.log(\"show res: \" + this.targetId);\n    },\n\n    update(dt) {\n        if (this.turnStatus == 0) {\n            return;\n        }\n\n        if (this.turnStatus == 1) {\n            // 加速状态\n            this.spinTime += dt;\n            this.turn.node.rotation += this.curSpeed;\n            if (this.curSpeed < this.maxSpeed) {\n                this.curSpeed += this.acc;\n            } else {\n                if (this.spinTime < this.duration) {\n                    return;\n                }\n                // 开始减速\n                this.turn.node.rotation = this.finalAngle;\n                this.turnStatus = 2;\n            }\n        } else if (this.turnStatus == 2) {\n            // 减速过程\n            let curRo = this.turn.node.rotation; // 此时等于finalAngle\n            let hadRo = curRo - this.finalAngle;\n            this.curSpeed = this.maxSpeed * ((this.decAngle - hadRo) / this.decAngle) + 0.2;\n            this.turn.node.rotation = curRo + this.curSpeed;\n\n            if ((this.decAngle - hadRo) <= 0) {\n                // 停止转动\n                this.turnStatus = 0;\n                this.turn.node.rotation = this.finalAngle;\n                if (this.springback) {\n                    let act = cc.rotateBy(0.5, -this.gearAngle);\n                    let seq = cc.sequence(cc.delayTime(0.2), act, cc.callFunc(this.showRes, this));\n                    this.turn.node.runAction(seq);\n                } else {\n                    this.showRes();\n                }\n            }\n        }\n    }\n\n});"]}