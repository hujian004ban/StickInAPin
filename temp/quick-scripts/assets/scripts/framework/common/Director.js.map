{"version":3,"sources":["Director.js"],"names":["cc","Class","extends","Component","statics","scene","sceneCanvas","sceneComponent","isBackground","toBackgroundOSTime","activePops","EventType","ALL_SINGLE_POP_CLOSE","init","initComponent","sceneName","uiRoot","persistRootNodeList","game","on","EVENT_HIDE","onEventHide","EVENT_SHOW","onEventShow","sys","platform","WECHAT_GAME","wx","onShow","onWXGShow","bind","onHide","onWXGHide","systemEvent","SystemEvent","KEY_DOWN","onKeyDown","director","Director","EVENT_AFTER_DRAW","onAfterDraw","view","setOrientation","macro","ORIENTATION_LANDSCAPE","setResizeCallback","log","zy","utils","time","dataMng","saveDataToLocal","toForegroundOSTime","interval","res","event","keyCode","KEY","back","preloadScene","onProgress","onLoad","loadScene","params","onLaunched","closeAllPops","window","getScene","getChildByName","getComponent","getSceneName","getSceneComponent","getSceneCanvas","getUiRoot","createPop","popName","prefab","componentName","popNameSpArr","split","length","isPopActive","initFunc","popNode","instantiate","position","v2","zIndex","getTopPopZIndex","parent","popData","push","popBase","initBase","popComponent","component","loader","loadRes","Prefab","err","getTopPopData","_topIndex","topIndex","topPop","constData","ZIndex","POP_BASE","getPopData","i","getPop","getActivePops","closePop","_popData","splice","cleanBase","onClosedCallback","emit","idx","addPersistRootNode","node","cleanPersistRootNode","index","removePersistRootNode"],"mappings":"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","file":"Director.js","sourceRoot":"../../../../../../assets/scripts/framework/common","sourcesContent":["/**\n * Created by skyxu on 2019/11/27.\n */\ncc.Class({\n    extends: cc.Component,\n\n    statics: {\n        // scene的单例\n        scene: null,\n        // sceneCanvas\n        sceneCanvas: null,\n        // scene挂载组件\n        sceneComponent: null,\n\n        // FIX后台\n        isBackground: null,\n        toBackgroundOSTime: null,\n\n        activePops: null,\n\n        // 事件类型\n        EventType: {\n            ALL_SINGLE_POP_CLOSE: 'ALL_SINGLE_POP_CLOSE', // 所有独立的POP被关闭\n        },\n\n        init: function (initComponent) {\n\n            this.scene = null;\n            this.sceneCanvas = null;\n            this.sceneComponent = null;\n            this.sceneName = null;\n            this.uiRoot = null;  // 多摄像机的情况下ui节点不能直接加到canvas上\n\n            this.isBackground = false;\n\n            // POP列表\n            this.activePops = [];\n\n            // 常驻节点列表\n            this.persistRootNodeList = [];\n\n            // 前后台事件处理\n            cc.game.on(cc.game.EVENT_HIDE, this.onEventHide, this);\n            cc.game.on(cc.game.EVENT_SHOW, this.onEventShow, this);\n\n            // 微信小游戏事件处理\n            if (cc.sys.platform == cc.sys.WECHAT_GAME) {\n                wx.onShow(this.onWXGShow.bind(this));\n                wx.onHide(this.onWXGHide.bind(this));\n                // wx.exitMiniProgram({\n                //     success: function (res) {\n                //         cc.log(\"wx.exitMiniProgram-success:\", res);\n                //     },\n                //     fail: function (res) {\n                //         cc.log(\"wx.exitMiniProgram-fail:\", res);\n                //     }\n                // })\n            }\n\n            // 键盘事件\n            cc.systemEvent.on(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n\n            // Canvas渲染事件(截屏)\n            cc.director.on(cc.Director.EVENT_AFTER_DRAW, this.onAfterDraw, this);\n\n            // 设置屏幕旋转(H5)\n            cc.view.setOrientation(cc.macro.ORIENTATION_LANDSCAPE);\n            // cc.view.setOrientation(cc.macro.ORIENTATION_PORTRAIT);\n\n            // 设置屏幕适配\n            // this.initResolutionPolicy();\n            // this.setSceneResolution(initComponent);\n\n            // 屏幕改变回调\n            cc.view.setResizeCallback(function () {\n                cc.log('setResizeCallback');\n                // this.initResolutionPolicy();\n                // this.setSceneResolution(this.getSceneComponent());\n            }.bind(this))\n        },\n\n        // initResolutionPolicy: function () {\n        //     // 手机分辨率\n        //     let frameSize = cc.view.getFrameSize();\n        //\n        //     let frameScale = frameSize.width / frameSize.height;\n        //     let designScale = ConstData.DesignSize.width / ConstData.DesignSize.height;\n        //     let designMaxScale = ConstData.DesignMaxSize.width / ConstData.DesignMaxSize.height;\n        //\n        //     // 场景canvas\n        //     if (frameScale >= designScale) {\n        //         // 默认设计分辨率\n        //         zc.sceneResolution = ConstData.DesignSize;\n        //     } else {\n        //         if (frameScale <= designMaxScale) {\n        //             // 最大适配高度\n        //             zc.sceneResolution = ConstData.DesignMaxSize;\n        //         } else {\n        //             let targetHeight = Math.floor(ConstData.DesignMaxSize.width * frameSize.height / frameSize.width);\n        //             zc.sceneResolution = cc.size(ConstData.DesignMaxSize.width, targetHeight);\n        //         }\n        //     }\n        //     cc.view.setResolutionPolicy(cc.ResolutionPolicy.SHOW_ALL);\n        //     // pop\n        //     let adapterHeight = zc.sceneResolution.height - ConstData.AdapterDiffSize.height;\n        //     if (adapterHeight >= ConstData.DesignSize.height) {\n        //         // 刘海屏适配\n        //         zc.popResolution = cc.size(zc.sceneResolution.width, adapterHeight);\n        //     } else {\n        //         // 默认设计分辨率\n        //         zc.popResolution = ConstData.DesignSize;\n        //     }\n        //\n        //     zc.frameWidth = frameSize.width;\n        //     zc.frameHeight = frameSize.height;\n        //     zc.frameCx = zc.frameWidth / 2;\n        //     zc.frameCy = zc.frameHeight / 2;\n        //\n        //     zc.width = zc.popResolution.width;\n        //     zc.height = zc.popResolution.height;\n        //     zc.cx = zc.width / 2;\n        //     zc.cy = zc.height / 2;\n        //\n        //     cc.log('---------------------------');\n        //     cc.log('zc.frameWidth', zc.frameWidth);\n        //     cc.log('zc.frameHeight', zc.frameHeight);\n        //     cc.log('zc.width', zc.width);\n        //     cc.log('zc.height', zc.height);\n        //     cc.log('zc.cx', zc.cx);\n        //     cc.log('zc.cy', zc.cy);\n        //     cc.log('zc.sceneResolution.width', zc.sceneResolution.width);\n        //     cc.log('zc.sceneResolution.height', zc.sceneResolution.height);\n        //     cc.log('zc.popResolution.width', zc.popResolution.width);\n        //     cc.log('zc.popResolution.height', zc.popResolution.height);\n        //     cc.log('---------------------------');\n        // },\n\n        // 分辨率适配\n        // setSceneResolution: function (component) {\n        //     let cvs = component.node.getComponent(cc.Canvas);\n        //\n        //     let content = component.node.getChildByName('Content');\n        //     if (content) {\n        //         zc.director.setPopResolution(content);\n        //     }\n        //\n        //     cvs.fitWidth = true;\n        //     cvs.fitHeight = true;\n        //     cvs.designResolution = zc.sceneResolution;\n        // },\n\n        // pop分辨率适配\n        // setPopResolution: function (node, type) {\n        //     type = type || ConstData.AdapterType.POP;\n        //     if (type == ConstData.AdapterType.POP) {\n        //         node.width = zc.popResolution.width;\n        //         node.height = zc.popResolution.height;\n        //     } else {\n        //         node.width = zc.sceneResolution.width;\n        //         node.height = zc.sceneResolution.height;\n        //     }\n        // },\n\n        onEventHide: function () {\n            if (!this.isBackground) {\n\n                this.isBackground = true;\n\n                // 进入后台的时间\n                this.toBackgroundOSTime = zy.utils.time();\n                cc.log('进入后台:', this.toBackgroundOSTime);\n\n                // zc.audio.pauseAll();\n                // 游戏逻辑处理\n                zy.dataMng.saveDataToLocal();\n            }\n        },\n\n        onEventShow: function () {\n            if (this.isBackground) {\n\n                this.isBackground = false;\n\n                const toForegroundOSTime = zy.utils.time();\n                const interval = toForegroundOSTime - this.toBackgroundOSTime;\n                cc.log('进入前台-interval:', interval);\n\n                // zc.timer.reduceCDAll(interval);\n\n                // zc.audio.resumeAll();\n\n            }\n        },\n\n        // 微信小游戏hide\n        onWXGHide: function (res) {\n            cc.log('onWXGHide', res);\n        },\n\n        // 微信小游戏show\n        onWXGShow: function (res) {\n            cc.log('onWXGShow', res);\n        },\n\n        // 按下\n        onKeyDown: function (event) {\n            cc.log('onKeyDown', event.keyCode);\n            switch (event.keyCode) {\n                // case cc.macro.KEY.back: { // 2.0\n                case cc.macro.KEY.back: { // 1.0\n                    // ZCSDK.exitSDK();\n                }\n            }\n        },\n\n        // 渲染回调\n        onAfterDraw: function () {\n            // let base64 = canvas.toDataURL('image/jpeg', 0.9);\n        },\n\n\n        preloadScene: function (sceneName, onProgress, onLoad) {\n            cc.director.preloadScene(sceneName, onProgress, onLoad);\n        },\n\n        // 加载Scene\n        loadScene: function (sceneName, params, onLaunched) {\n            // 清除所有POP\n            zy.director.closeAllPops();\n\n            window[this.sceneName + 'Scene'] = null;\n\n            cc.director.loadScene(sceneName, function () {\n                cc.log('loadScene:', sceneName);\n\n                this.scene = cc.director.getScene();\n                this.sceneCanvas = this.scene.getChildByName('Canvas');\n                this.uiRoot = this.sceneCanvas.getChildByName(\"UIRoot\") || this.sceneCanvas;\n                this.sceneName = sceneName;\n                this.sceneComponent = this.sceneCanvas.getComponent(sceneName + 'Scene');\n                if (this.sceneComponent) {\n                    this.sceneComponent.sceneName = sceneName + 'Scene';\n                    if (this.sceneComponent.init) {\n                        this.sceneComponent.init(params);\n                    }\n                }\n\n                window[this.sceneName + 'Scene'] = this.sceneComponent;\n\n                if (onLaunched) {\n                    onLaunched(this.scene, this.sceneCanvas, this.sceneComponent);\n                }\n\n                // 解决IOS web下不播放音频的问题\n                // zc.audio.showIOSWebMask();\n\n            }.bind(this));\n        },\n\n        // 获取当前Scene名字\n        getSceneName: function () {\n            return this.sceneName ? this.sceneName : '';\n        },\n\n        // 获取Scene脚本\n        getSceneComponent: function () {\n            return this.sceneComponent;\n        },\n\n        // 获取Scene\n        getScene: function () {\n            return this.scene;\n        },\n\n        // 获取Scene Canvas\n        getSceneCanvas: function () {\n            return this.sceneCanvas;\n        },\n\n        // 获取ui根节点\n        getUiRoot: function () {\n            return this.uiRoot;\n        },\n\n        // 退出\n        // logout: function (restart) {\n        //\n        //     zc.event.emit(zc.director.EventType.ACCOUNT_LOG_OUT); // 退出登录\n        //\n        //     // 清除Player\n        //     data.clean();\n        //\n        //     // 清理网络\n        //     zc.http.clean();\n        //\n        //     // 清理订单\n        //     ZCSDK.clean();\n        //\n        //     // 清理大厅socket\n        //     zc.ws.close(true);\n        //\n        //     // 清理助手\n        //     zc.helper.clean();\n        //\n        //     // 清理引导\n        //     zc.guide.clean();\n        //\n        //     // 停止音效\n        //     zc.audio.clean();\n        //\n        //     // 恢复倍速\n        //     cc.director.getScheduler().setTimeScale(1);\n        //\n        //     // 清理登录状态\n        //     GAMEUID = '';\n        //     GAMETOKEN = '';\n        //     SERVERID = '';\n        //     SERVERADDR = '';\n        //     SERVERPORTS = '';\n        //     SERVERTCPPORTS = '';\n        //\n        //     // 是否重启\n        //     if (restart) {\n        //         zc.director.restart();\n        //     } else {\n        //         // 资源\n        //         zc.resourceManager.clean();\n        //\n        //         zc.director.loadScene('login');\n        //     }\n        //\n        // },\n\n        // 重启\n        // restart: function () {\n        //     // 清理各种事件\n        //     cc.game.off(cc.game.EVENT_HIDE, this.onEventHide, this);\n        //     cc.game.off(cc.game.EVENT_SHOW, this.onEventShow, this);\n        //     cc.systemEvent.off(cc.SystemEvent.EventType.KEY_DOWN, this.onKeyDown, this);\n        //\n        //     // 微信小游戏事件处理\n        //     if (cc.sys.platform == cc.sys.WECHAT_GAME) {\n        //         wx.offShow(this.onWXGShow);\n        //         wx.offHide(this.onWXGHide);\n        //     }\n        //\n        //     // 资源\n        //     zc.resourceManager.clean(true);\n        //\n        //     // 停止音效\n        //     zc.audio.clean();\n        //\n        //     // 清理常驻节点\n        //     zc.director.cleanPersistRootNode();\n        //\n        //     // 释放所有资源\n        //     // cc.sys.garbageCollect();\n        //\n        //     cc.game.restart();\n        // },\n\n        // 加载Prefab\n        createPop: function (popName, params, prefab) {\n            params = params || {};\n\n            let componentName = '';\n            const popNameSpArr = popName.split('/');\n            if (popNameSpArr.length > 0) {\n                componentName = popNameSpArr[popNameSpArr.length - 1];\n            }\n\n            cc.log('createPop:' + popName, componentName);\n            if (this.isPopActive(popName)) {\n                cc.log('当前POP已存在:' + popName);\n                return\n            }\n\n            let initFunc = function (prefab) {\n                let popNode = cc.instantiate(prefab);\n                popNode.position = cc.v2(0, 0);\n                popNode.zIndex = this.getTopPopZIndex() + 10;\n\n                popNode.parent = this.uiRoot;\n                // 存到列表\n                let popData = { popName: popName, popNode: popNode };\n                this.activePops.push(popData);\n                // POPBase\n                let popBase = popNode.getComponent('PopBase');\n                popData.popBase = popBase; // 存入数据\n\n                popBase.initBase(params, popName);\n                popData.popComponent = popBase.component;\n            }.bind(this);\n\n            // 如果传入了prefab，直接使用\n            if (prefab) {\n                initFunc(prefab);\n            } else {\n                // 加载 Prefab\n                cc.loader.loadRes(popName, cc.Prefab, null, function (err, prefab) {\n                    if (err) {\n                        cc.log(popName + '加载失败', err);\n                        // zc.ui.loading.hide('pop');\n                        return;\n                    }\n\n                    initFunc(prefab);\n                }.bind(this));\n            }\n        },\n\n        // 获取最上层的POP\n        getTopPopData: function (_topIndex) {\n            let topIndex = _topIndex ? _topIndex : 1;\n            return this.activePops[this.activePops.length - topIndex];\n        },\n\n        getTopPopZIndex: function () {\n            let topPop = this.getTopPopData();\n            if (topPop) {\n                return topPop.popNode.zIndex;\n            }\n            return zy.constData.ZIndex.POP_BASE;\n        },\n\n        // 获取POP数据\n        getPopData: function (popName) {\n            for (const i in this.activePops) {\n                const popData = this.activePops[i];\n                if (popData.popName == popName) {\n                    return popData;\n                }\n            }\n        },\n\n        // 获取POP\n        getPop: function (popName) {\n            let popData = this.getPopData(popName);\n            if (popData) {\n                return popData.popComponent;\n            }\n        },\n\n        // POP是否存在\n        isPopActive: function (popName) {\n            if (this.getPopData(popName)) {\n                return true;\n            }\n            return false;\n        },\n\n        getActivePops: function () {\n            return this.activePops;\n        },\n\n        // 关闭Prefab\n        closePop: function (popName) {\n            cc.log('closePop:' + popName);\n            const popData = this.getPopData(popName);\n            if (popData) {\n                for (const i in this.activePops) {\n                    const _popData = this.activePops[i];\n                    if (popData == _popData) {\n                        this.activePops.splice(i, 1);\n                        break;\n                    }\n                }\n\n                // POPBase\n                let popBase = popData.popBase;\n                popBase.cleanBase();\n\n                // 当所有独立的POP被关闭\n                if (this.activePops.length == 0 && !popBase.onClosedCallback) {\n                    zy.event.emit(zy.director.EventType.ALL_SINGLE_POP_CLOSE);\n                }\n\n            }\n        },\n\n        // 关闭所有Prefab\n        closeAllPops: function () {\n            while(this.activePops.length > 0) {\n                let idx = this.activePops.length - 1;\n                let popData = this.activePops[idx];\n\n                let popName = popData.popName;\n                cc.log('closeAllPops:' + popName);\n\n                this.activePops.splice(idx, 1);\n\n                let popBase = popData.popBase;\n                popBase.cleanBase();\n            }\n\n            this.activePops = [];\n        },\n\n        // 常驻节点数据\n        addPersistRootNode: function (node) {\n            cc.game.addPersistRootNode(node);\n\n            this.persistRootNodeList.push(node);\n        },\n\n        // 清理常驻节点数据\n        cleanPersistRootNode: function () {\n            for (const index in this.persistRootNodeList) {\n                const node = this.persistRootNodeList[index];\n                cc.game.removePersistRootNode(node);\n            }\n        },\n\n    },\n\n});"]}